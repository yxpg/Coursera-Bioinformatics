import time
from library.WordFrequency import *
from library.SlowWordFrequency import *

def test1():
    text = 'AGTGGGGATCCTACCCACATTAGATATCGGTAATCCTACCCACATTAGATATCGGTAATCCTACCCACATTAGATCACCCCTACATTAGATCACCCCTATCCTACCCATCGGTAAGTGGGGCACCCCTATCGGTACACCCCTACATTAGATATCCTACCCATCGGTAATCGGTAATCCTACCCATCCTACCCACATTAGATATCCTACCCAGTGGGGATCGGTACACCCCTAGTGGGGAGTGGGGATCGGTAATCGGTAATCGGTACACCCCTCACCCCTACATTAGATCACCCCTACATTAGATATCCTACCCACATTAGATACATTAGATAGTGGGGCACCCCTATCCTACCCATCGGTAAGTGGGGACATTAGATACATTAGATCACCCCTATCCTACCCATCCTACCCATCCTACCCATCGGTAACATTAGATAGTGGGGATCCTACCCATCCTACCCATCCTACCCACATTAGATATCGGTAATCGGTAAGTGGGGATCCTACCCCACCCCTAGTGGGGATCCTACCCCACCCCTACATTAGATACATTAGATATCGGTAACATTAGATCACCCCTAGTGGGGATCGGTAATCGGTAAGTGGGGAGTGGGGATCGGTACACCCCTCACCCCTAGTGGGGATCGGTAATCCTACCCAGTGGGGAGTGGGGATCCTACCCACATTAGATAGTGGGGACATTAGATACATTAGATAGTGGGGCACCCCTCACCCCTATCCTACCCATCCTACCCATCGGTAAGTGGGGAGTGGGGCACCCCTATCGGTAACATTAGATACATTAGATAGTGGGGATCCTACCCATCCTACCCAGTGGGGATCGGTAAGTGGGGATCGGTAATCCTACCCATCCTACCCACATTAGAT'
    patternLength = 9

    t0 = time.time()
    mostFrequent = frequent_words(text, patternLength)
    t1 = time.time()
    print(t1 - t0)
    print(' '.join(str(p) for p in mostFrequent))

def test2():    
    print(pattern_to_number('TAGGTGTTCAAGTGAGA'))
    print(number_to_pattern(5455, 11))
    print(compute_frequencies('ACGCGGCTCTGAAA', 2))

def test3():
    text = 'AGTGGGGATCCTACCCACATTAGATATCGGTAATCCTACCCACATTAGATATCGGTAATCCTACCCACATTAGATCACCCCTACATTAGATCACCCCTATCCTACCCATCGGTAAGTGGGGCACCCCTATCGGTACACCCCTACATTAGATATCCTACCCATCGGTAATCGGTAATCCTACCCATCCTACCCACATTAGATATCCTACCCAGTGGGGATCGGTACACCCCTAGTGGGGAGTGGGGATCGGTAATCGGTAATCGGTACACCCCTCACCCCTACATTAGATCACCCCTACATTAGATATCCTACCCACATTAGATACATTAGATAGTGGGGCACCCCTATCCTACCCATCGGTAAGTGGGGACATTAGATACATTAGATCACCCCTATCCTACCCATCCTACCCATCCTACCCATCGGTAACATTAGATAGTGGGGATCCTACCCATCCTACCCATCCTACCCACATTAGATATCGGTAATCGGTAAGTGGGGATCCTACCCCACCCCTAGTGGGGATCCTACCCCACCCCTACATTAGATACATTAGATATCGGTAACATTAGATCACCCCTAGTGGGGATCGGTAATCGGTAAGTGGGGAGTGGGGATCGGTACACCCCTCACCCCTAGTGGGGATCGGTAATCCTACCCAGTGGGGAGTGGGGATCCTACCCACATTAGATAGTGGGGACATTAGATACATTAGATAGTGGGGCACCCCTCACCCCTATCCTACCCATCCTACCCATCGGTAAGTGGGGAGTGGGGCACCCCTATCGGTAACATTAGATACATTAGATAGTGGGGATCCTACCCATCCTACCCAGTGGGGATCGGTAAGTGGGGATCGGTAATCCTACCCATCCTACCCACATTAGAT'
    patternLength = 9

    t0 = time.time()
    mostFrequent = frequent_words_by_frequency_array(text, patternLength)
    t1 = time.time()
    print(t1 - t0)
    print(' '.join(str(p) for p in mostFrequent))    

def test4():
    text = 'AGTGGGGATCCTACCCACATTAGATATCGGTAATCCTACCCACATTAGATATCGGTAATCCTACCCACATTAGATCACCCCTACATTAGATCACCCCTATCCTACCCATCGGTAAGTGGGGCACCCCTATCGGTACACCCCTACATTAGATATCCTACCCATCGGTAATCGGTAATCCTACCCATCCTACCCACATTAGATATCCTACCCAGTGGGGATCGGTACACCCCTAGTGGGGAGTGGGGATCGGTAATCGGTAATCGGTACACCCCTCACCCCTACATTAGATCACCCCTACATTAGATATCCTACCCACATTAGATACATTAGATAGTGGGGCACCCCTATCCTACCCATCGGTAAGTGGGGACATTAGATACATTAGATCACCCCTATCCTACCCATCCTACCCATCCTACCCATCGGTAACATTAGATAGTGGGGATCCTACCCATCCTACCCATCCTACCCACATTAGATATCGGTAATCGGTAAGTGGGGATCCTACCCCACCCCTAGTGGGGATCCTACCCCACCCCTACATTAGATACATTAGATATCGGTAACATTAGATCACCCCTAGTGGGGATCGGTAATCGGTAAGTGGGGAGTGGGGATCGGTACACCCCTCACCCCTAGTGGGGATCGGTAATCCTACCCAGTGGGGAGTGGGGATCCTACCCACATTAGATAGTGGGGACATTAGATACATTAGATAGTGGGGCACCCCTCACCCCTATCCTACCCATCCTACCCATCGGTAAGTGGGGAGTGGGGCACCCCTATCGGTAACATTAGATACATTAGATAGTGGGGATCCTACCCATCCTACCCAGTGGGGATCGGTAAGTGGGGATCGGTAATCCTACCCATCCTACCCACATTAGAT'
    patternLength = 9

    t0 = time.time()
    mostFrequent = frequent_words_by_sorting(text, patternLength)
    t1 = time.time()
    print(t1 - t0)
    print(' '.join(str(p) for p in mostFrequent))

def test5():
    text = 'ACGTTGCATGTCGCATGATGCATGAGAGCT'
    patternLength = 4
    mismatches = 1

    t0 = time.time()
    mostFrequent = frequent_words_with_mistmatches(text, patternLength, mismatches)
    t1 = time.time()
    print(t1 - t0)
    print(' '.join(str(p) for p in mostFrequent))
    
def test6():
    text = 'ACTGCAAACTGCAAACAACAACTGCAAGCAAACAACTGTTGTTACAAAACGTTACTACAGTTACAGTTGCAAGTTAAACAAACAAACGCAAAAACAAACGCAAACTGCAAACTGTTGCAAACAGTTACAAAACACTACTACAACAACAAAACGTTGTTGCAAAAACAAACAAACGTTACAGCAAACTACTACTACTGTTGTTAAACAAACAAACAAACAAACGTTAAACACAGTTGTTACAAAACAAACGCAAAAACGCAAGTTGTTGCAAACAACTGTTGCAAGTTAAACACTGCAAACAAAACGCAAGTTGCAAACAGCAAACAACAAAACGTTAAACAAACACA'
    patternLength = 7
    mismatches = 3

    t0 = time.time()
    mostFrequent = frequent_words_with_mistmatches(text, patternLength, mismatches)
    t1 = time.time()
    print(t1 - t0)
    print(' '.join(str(p) for p in mostFrequent))

def test7():
    text = 'ACGTTGCATGTCGCATGATGCATGAGAGCT'
    patternLength = 4
    mismatches = 1

    t0 = time.time()
    mostFrequent = frequent_words_with_mistmatches_and_reverse_complements(text, patternLength, mismatches)
    t1 = time.time()
    print(t1 - t0)
    print(' '.join(str(p) for p in mostFrequent)) 

def test8():
    text = 'ACGGTAACGGACTAACCCTTACTGTAGGTATAACGGTATATACTGCCTACGGCCTTACTGGGCTGGGCCTACCCTGGCTGTAGGACTAACCTGTACTGCTGACGGTAACCCTGGTAACTACCTCTGGGTAGGCTGTAACGGACGGCTGCCTTACTGCTGCTGTAGGGGCCTCTGTAACCCTGGCCTACACGGCCTCCTCTGGGCTGCTGTACTGTATAGGCCTACCTGCCTCTG'
    patternLength = 5
    mismatches = 2

    t0 = time.time()
    mostFrequent = frequent_words_with_mistmatches_and_reverse_complements(text, patternLength, mismatches)
    t1 = time.time()
    print(t1 - t0)
    print(' '.join(str(p) for p in mostFrequent))

def test9():
    with open('dataset/EColi.txt') as file:
        content = file.readlines()
    genome = [line.strip() for line in content][0]
    patternLength = 9
    mismatches = 1
    ori = 3923620
    window = 500

    t0 = time.time()
    mostFrequent = frequent_words_with_mistmatches_and_reverse_complements(genome[ori : ori + window], patternLength, mismatches)
    t1 = time.time()
    print(t1 - t0)
    print('\n'.join(str(p) for p in mostFrequent))

#test1()
#test2()
#test3()
#test4()
#test5()
#test6()
#test7()
#test8()
test9()